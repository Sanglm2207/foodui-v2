{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n      this._lastDataByCoordSys = null;\n\n      this._showSeriesItemTooltip(e, el, dispatchAction);\n    } // Tooltip provided directly. Like legend.\n    else if (el && el.tooltip) {\n      this._lastDataByCoordSys = null;\n\n      this._showComponentItemTooltip(e, el, dispatchAction);\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["D:/Freelancer/foodui-v2/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"names":["echarts","require","zrUtil","env","TooltipContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","_default","extendComponentView","type","init","ecModel","api","node","tooltipContent","getDom","_tooltipContent","render","tooltipModel","wxa","group","removeAll","_tooltipModel","_ecModel","_api","_lastDataByCoordSys","_alwaysShowContent","get","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self","clearTimeout","_refreshUpdateTimeout","setTimeout","manuallyShowTip","payload","from","uid","makeDispatchAction","_ticket","dataByCoordSys","tooltip","el","position","offsetX","offsetY","target","event","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","getComponent","seriesModel","getSeriesByIndex","data","getData","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","item","axisModel","axisDim","axisIndex","axisValue","value","seriesDefaultHTML","valueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","idxItem","series","dataIndexInside","dataParams","getDataParams","axisType","axisId","getAxisRawValue","axisValueLabel","push","formatTooltip","firstLine","encodeHTML","join","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dataModel","dataType","tooltipTrigger","params","defaultHtml","asyncTicket","name","getRawIndex","tooltipOpt","content","formatter","subTooltipModel","html","formatTpl","callback","cbTicket","setContent","show","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","rect","getBoundingRect","clone","applyTransform","transform","viewSize","slice","isArray","isObject","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","hide","unregister","modelCascade","resultModel","pop","isInstance","gapH","gapV","size","getOuterSize","min","max","clientWidth","clientHeight","document","defaultView","getComputedStyle","stl","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","gap","rectWidth","rectHeight","module","exports"],"mappings":"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","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}